module Final_Project( 
    input CLK100MHZ,
    input Mcode,
    input left_wall, // Wall Avoidance
    input right_wall,
    input [7:0] sw,
    input colorFreq,
    output [15:0] led, 
    output EnA, EnB, // Motor Movement
    output [3:0]In,    
    output a,b,c,d,e,f,g,dp, //Seven Segment Display
    output [3:0]an,
    output red,
    output green,
    output blue,
    output s2,
    output s3
    );
    
    // Morse Code Communication

wire [1:0] command;

MorseCode mCode(CLK100MHZ, Mcode, led[15:5], command); 

    // Wall Avoidance //////////////////////////////////////////////////////////////////////////////////

wire [2:0] move;
wire [20:0] widthA; // (left motor) PWM changes when turning
wire [20:0] widthB; // (right motor) 

Wall_Avoidance turn_protocol(   .clk(CLK100MHZ),
                                .command(command),
                                .left_wall(left_wall),
                                .right_wall(right_wall),
                                .move(move),
                                .widthA(widthA),
                                .widthB(widthB) );
                                
    // PWM modules run pwm constantly for both motors //////////////////////////////////////////////////////////////////////////////////

PWM pwmA(CLK100MHZ, widthA, EnA);
PWM pwmB(CLK100MHZ, widthB, EnB);

    // Color Sensor //////////////////////////////////////////////////////////////////////////////////

wire [1:0] color;
assign led[1:0] = color [1:0];

ColorSensor colors(         .clock(CLK100MHZ),
                            .reset(),
                            .colorFreq(colorFreq),
                            .color(color),
                            .s2(s2),
                            .s3(s3) );
                            
                            
    // Seven Segment Display shows the card found and when the rover is searching //////////////////////////////////////////////////////////////////////////////////

Seven_seg display(CLK100MHZ, color [1:0], a, b, c, d, e, f, g, dp, an[3:0]);

    // RGB_LED displays what color is found (white when searching) //////////////////////////////////////////////////////////////////////////////////

RGB_LED rgb(color [1:0], red, green, blue);

    // Rover Movement //////////////////////////////////////////////////////////////////////////////////

Movement moving(            .command(command),
                            .left_wall(left_wall),
                            .right_wall(right_wall),
                            .move(move),
                            .In(In) );                               
   
endmodule
